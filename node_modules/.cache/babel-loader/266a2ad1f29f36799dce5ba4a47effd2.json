{"ast":null,"code":"import _slicedToArray from\"/home/airtonsena/www/GithubExplore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useRouteMatch,Link}from'react-router-dom';import{FiChevronLeft,FiChevronRight}from'react-icons/fi';import api from'../../services/api';import{Header,RepositoryInfo,Issues}from'./styles';import logoImg from\"../../assets/logo.svg\";var Repository=function Repository(){var _useRouteMatch=useRouteMatch(),params=_useRouteMatch.params;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),repository=_useState2[0],setRepository=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),issues=_useState4[0],setIssues=_useState4[1];useEffect(function(){api.get(\"repos/\".concat(params.repository)).then(function(response){setRepository(response.data);});api.get(\"repos/\".concat(params.repository,\"/issues\")).then(function(response){setIssues(response.data);});},[params.repository]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null,/*#__PURE__*/React.createElement(\"img\",{src:logoImg,alt:\"Github Explorer\"}),/*#__PURE__*/React.createElement(Link,{to:\"/dashboard\"},/*#__PURE__*/React.createElement(FiChevronLeft,{size:16}),\"Voltar\")),repository&&/*#__PURE__*/React.createElement(RepositoryInfo,null,/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"img\",{src:repository.owner.avatar_url,alt:repository.owner.login}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,repository.full_name),/*#__PURE__*/React.createElement(\"p\",null,repository.description))),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,repository.stargazers_count),/*#__PURE__*/React.createElement(\"span\",null,\"Starts\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,repository.forks_count),/*#__PURE__*/React.createElement(\"span\",null,\"Forks\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,repository.open_issues_count),/*#__PURE__*/React.createElement(\"span\",null,\"Issues Abertas\")))),/*#__PURE__*/React.createElement(Issues,null,issues.map(function(issue){return/*#__PURE__*/React.createElement(\"a\",{href:issue.html_url,key:issue.id},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,issue.title),/*#__PURE__*/React.createElement(\"p\",null,issue.user.login)),/*#__PURE__*/React.createElement(FiChevronRight,{size:20}));})));};export default Repository;","map":{"version":3,"sources":["/home/airtonsena/www/GithubExplore/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","useRouteMatch","Link","FiChevronLeft","FiChevronRight","api","Header","RepositoryInfo","Issues","Repository","params","repository","setRepository","issues","setIssues","get","then","response","data","logoImg","owner","avatar_url","login","full_name","description","stargazers_count","forks_count","open_issues_count","map","issue","html_url","id","title","user"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,aAAT,CAAwBC,IAAxB,KAAoC,kBAApC,CACA,OAASC,aAAT,CAAwBC,cAAxB,KAA8C,gBAA9C,CAEA,MAAOC,CAAAA,GAAP,KAAgB,oBAAhB,CAEA,OAASC,MAAT,CAAiBC,cAAjB,CAAiCC,MAAjC,KAA+C,UAA/C,C,2CA6BA,GAAMC,CAAAA,UAAoB,CAAG,QAAvBA,CAAAA,UAAuB,EAAM,oBACdR,aAAa,EADC,CACzBS,MADyB,gBACzBA,MADyB,eAEGV,QAAQ,CAAoB,IAApB,CAFX,wCAE1BW,UAF0B,eAEdC,aAFc,8BAGLZ,QAAQ,CAAU,EAAV,CAHH,yCAG1Ba,MAH0B,eAGlBC,SAHkB,eAKjCf,SAAS,CAAC,UAAM,CACdM,GAAG,CAACU,GAAJ,iBAAiBL,MAAM,CAACC,UAAxB,GAAsCK,IAAtC,CAA2C,SAACC,QAAD,CAAc,CACvDL,aAAa,CAACK,QAAQ,CAACC,IAAV,CAAb,CACD,CAFD,EAIAb,GAAG,CAACU,GAAJ,iBAAiBL,MAAM,CAACC,UAAxB,aAA6CK,IAA7C,CAAkD,SAACC,QAAD,CAAc,CAC9DH,SAAS,CAACG,QAAQ,CAACC,IAAV,CAAT,CACD,CAFD,EAGD,CARQ,CAQN,CAACR,MAAM,CAACC,UAAR,CARM,CAAT,CAUA,mBACE,qDACE,oBAAC,MAAD,mBACE,2BAAK,GAAG,CAAEQ,OAAV,CAAmB,GAAG,CAAC,iBAAvB,EADF,cAEE,oBAAC,IAAD,EAAM,EAAE,CAAC,YAAT,eACE,oBAAC,aAAD,EAAe,IAAI,CAAE,EAArB,EADF,UAFF,CADF,CASGR,UAAU,eACT,oBAAC,cAAD,mBACE,+CACE,2BACE,GAAG,CAAEA,UAAU,CAACS,KAAX,CAAiBC,UADxB,CAEE,GAAG,CAAEV,UAAU,CAACS,KAAX,CAAiBE,KAFxB,EADF,cAKE,4CACE,kCAASX,UAAU,CAACY,SAApB,CADF,cAEE,6BAAIZ,UAAU,CAACa,WAAf,CAFF,CALF,CADF,cAWE,2CACE,2CACE,kCAASb,UAAU,CAACc,gBAApB,CADF,cAEE,yCAFF,CADF,cAKE,2CACE,kCAASd,UAAU,CAACe,WAApB,CADF,cAEE,wCAFF,CALF,cASE,2CACE,kCAASf,UAAU,CAACgB,iBAApB,CADF,cAEE,iDAFF,CATF,CAXF,CAVJ,cAqCE,oBAAC,MAAD,MACGd,MAAM,CAACe,GAAP,CAAW,SAACC,KAAD,qBACV,yBAAG,IAAI,CAAEA,KAAK,CAACC,QAAf,CAAyB,GAAG,CAAED,KAAK,CAACE,EAApC,eACE,4CACE,kCAASF,KAAK,CAACG,KAAf,CADF,cAEE,6BAAIH,KAAK,CAACI,IAAN,CAAWX,KAAf,CAFF,CADF,cAKE,oBAAC,cAAD,EAAgB,IAAI,CAAE,EAAtB,EALF,CADU,EAAX,CADH,CArCF,CADF,CAmDD,CAlED,CAoEA,cAAeb,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\nimport logoImg from '../../assets/logo.svg';\n\ninterface RepositoryParms {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParms>();\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then((response) => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"Github Explorer\" />\n        <Link to=\"/dashboard\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Starts</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues Abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n      <Issues>\n        {issues.map((issue) => (\n          <a href={issue.html_url} key={issue.id}>\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}