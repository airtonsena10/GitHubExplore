{"ast":null,"code":"import _regeneratorRuntime from\"/home/airtonsena/www/GithubExplore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/airtonsena/www/GithubExplore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/airtonsena/www/GithubExplore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/airtonsena/www/GithubExplore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{FiChevronRight}from'react-icons/fi';import{Link}from'react-router-dom';import api from'../../services/api';import logoImg from\"../../assets/logo.svg\";import{Title,Form,Repositories,Error}from'./styles';var Dashboard=function Dashboard(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newRepo=_useState2[0],setNewRepo=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputError=_useState4[0],setInputError=_useState4[1];var _useState5=useState(function(){var storageRepositories=localStorage.getItem('@GithubExplorer:repositories');if(storageRepositories){return JSON.parse(storageRepositories);}return[];}),_useState6=_slicedToArray(_useState5,2),repositories=_useState6[0],setRepositories=_useState6[1];useEffect(function(){localStorage.setItem('@GithubExplorer:repositories',JSON.stringify(repositories));},[repositories]);function handleAddRepository(_x){return _handleAddRepository.apply(this,arguments);}function _handleAddRepository(){_handleAddRepository=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response,repository;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(newRepo){_context.next=4;break;}setInputError('Digite o autor/nome do repositório');return _context.abrupt(\"return\");case 4:_context.prev=4;_context.next=7;return api.get(\"repos/\".concat(newRepo));case 7:response=_context.sent;repository=response.data;setRepositories([].concat(_toConsumableArray(repositories),[repository]));setNewRepo('');setInputError('');_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](4);setInputError('Erro na busca por esse repositório');case 17:case\"end\":return _context.stop();}}},_callee,null,[[4,14]]);}));return _handleAddRepository.apply(this,arguments);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:logoImg,alt:\"Github Explorer\"}),/*#__PURE__*/React.createElement(Title,null,\"Explorer repost\\xF3rios no GitHub\"),/*#__PURE__*/React.createElement(Form,{hasError:!!inputError,onSubmit:handleAddRepository},/*#__PURE__*/React.createElement(\"input\",{value:newRepo,onChange:function onChange(e){return setNewRepo(e.target.value);},placeholder:\"Digite o nome do reposit\\xF3rio\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Pesquisar\")),inputError&&/*#__PURE__*/React.createElement(Error,null,inputError),/*#__PURE__*/React.createElement(Repositories,null,repositories.map(function(repository){return/*#__PURE__*/React.createElement(Link,{to:\"repositories/\".concat(repository.full_name),key:repository.full_name},/*#__PURE__*/React.createElement(\"img\",{src:repository.owner.avatar_url,alt:repository.owner.login}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",null,repository.full_name),/*#__PURE__*/React.createElement(\"p\",null,repository.description)),/*#__PURE__*/React.createElement(FiChevronRight,{size:20}));})));};export default Dashboard;","map":{"version":3,"sources":["/home/airtonsena/www/GithubExplore/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","Link","api","Title","Form","Repositories","Error","Dashboard","newRepo","setNewRepo","inputError","setInputError","storageRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","setItem","stringify","handleAddRepository","event","preventDefault","get","response","repository","data","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"ymBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAAqCC,SAArC,KAAsD,OAAtD,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,GAAP,KAAgB,oBAAhB,C,2CAIA,OAASC,KAAT,CAAgBC,IAAhB,CAAsBC,YAAtB,CAAoCC,KAApC,KAAiD,UAAjD,CAWA,GAAMC,CAAAA,SAAmB,CAAG,QAAtBA,CAAAA,SAAsB,EAAM,eACFT,QAAQ,CAAC,EAAD,CADN,wCACzBU,OADyB,eAChBC,UADgB,8BAEIX,QAAQ,CAAC,EAAD,CAFZ,yCAEzBY,UAFyB,eAEbC,aAFa,8BAIQb,QAAQ,CAAe,UAAM,CACnE,GAAMc,CAAAA,mBAAmB,CAAGC,YAAY,CAACC,OAAb,CAC1B,8BAD0B,CAA5B,CAIA,GAAIF,mBAAJ,CAAyB,CACvB,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,mBAAX,CAAP,CACD,CACD,MAAO,EAAP,CACD,CAT+C,CAJhB,yCAIzBK,YAJyB,eAIXC,eAJW,eAehCnB,SAAS,CAAC,UAAM,CACdc,YAAY,CAACM,OAAb,CACE,8BADF,CAEEJ,IAAI,CAACK,SAAL,CAAeH,YAAf,CAFF,EAID,CALQ,CAKN,CAACA,YAAD,CALM,CAAT,CAfgC,QAsBjBI,CAAAA,mBAtBiB,qKAsBhC,iBACEC,KADF,0IAGEA,KAAK,CAACC,cAAN,GAHF,GAKOf,OALP,yBAMIG,aAAa,CAAC,oCAAD,CAAb,CANJ,8EAW2BT,CAAAA,GAAG,CAACsB,GAAJ,iBAA6BhB,OAA7B,EAX3B,QAWUiB,QAXV,eAaUC,UAbV,CAauBD,QAAQ,CAACE,IAbhC,CAeIT,eAAe,8BAAKD,YAAL,GAAmBS,UAAnB,GAAf,CACAjB,UAAU,CAAC,EAAD,CAAV,CACAE,aAAa,CAAC,EAAD,CAAb,CAjBJ,iFAmBIA,aAAa,CAAC,oCAAD,CAAb,CAnBJ,qEAtBgC,sDA6ChC,mBACE,qDACE,2BAAK,GAAG,CAAEiB,OAAV,CAAmB,GAAG,CAAC,iBAAvB,EADF,cAEE,oBAAC,KAAD,0CAFF,cAIE,oBAAC,IAAD,EAAM,QAAQ,CAAE,CAAC,CAAClB,UAAlB,CAA8B,QAAQ,CAAEW,mBAAxC,eACE,6BACE,KAAK,CAAEb,OADT,CAEE,QAAQ,CAAE,kBAACqB,CAAD,QAAOpB,CAAAA,UAAU,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EAFZ,CAGE,WAAW,CAAC,iCAHd,EADF,cAME,8BAAQ,IAAI,CAAC,QAAb,cANF,CAJF,CAYGrB,UAAU,eAAI,oBAAC,KAAD,MAAQA,UAAR,CAZjB,cAaE,oBAAC,YAAD,MACGO,YAAY,CAACe,GAAb,CAAiB,SAACN,UAAD,qBAChB,oBAAC,IAAD,EACE,EAAE,wBAAkBA,UAAU,CAACO,SAA7B,CADJ,CAEE,GAAG,CAAEP,UAAU,CAACO,SAFlB,eAIE,2BACE,GAAG,CAAEP,UAAU,CAACQ,KAAX,CAAiBC,UADxB,CAEE,GAAG,CAAET,UAAU,CAACQ,KAAX,CAAiBE,KAFxB,EAJF,cAQE,4CACE,kCAASV,UAAU,CAACO,SAApB,CADF,cAEE,6BAAIP,UAAU,CAACW,WAAf,CAFF,CARF,cAaE,oBAAC,cAAD,EAAgB,IAAI,CAAE,EAAtB,EAbF,CADgB,EAAjB,CADH,CAbF,CADF,CAmCD,CAhFD,CAkFA,cAAe9B,CAAAA,SAAf","sourcesContent":["import React, { useState, FormEvent, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storageRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n\n    if (storageRepositories) {\n      return JSON.parse(storageRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explorer repostórios no GitHub</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n      <Repositories>\n        {repositories.map((repository) => (\n          <Link\n            to={`repositories/${repository.full_name}`}\n            key={repository.full_name}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}